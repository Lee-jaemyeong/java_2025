/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-03-21 08:24:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp_005fbasic;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jsp015_005fcontrol_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<div class=\"p-3 bg-primary text-white \">\r\n");
      out.write("		<h1>007. CONTROL</h1>\r\n");
      out.write("		<ol>\r\n");
      out.write("			<li>IF</li>\r\n");
      out.write("			<li>SWITCH</li>\r\n");
      out.write("			<li>FOR/WHILE/DO WHILE</li>\r\n");
      out.write("		</ol>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<div class=\"container card  my-3\">\r\n");
      out.write("		<h3 class=\"card-header\">007. CONTROL - Step1. IF</h3>\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<script>\r\n");
      out.write("				// 작업위치\r\n");
      out.write("				/*\r\n");
      out.write("				  if(조건) {  조건이 맞으면 true }\r\n");
      out.write("				  else{   조건이 다르면 false }\r\n");
      out.write("				 */\r\n");
      out.write("				 //1. 출력구문\r\n");
      out.write("				 document.write(\"정리1. 출력\");\r\n");
      out.write("				 document.write(\"<p>하고싶은말~!</p>\");\r\n");
      out.write("				 console.log(\"안녕! javascript\"); // 브라우저-개발자모드(f12)-console\r\n");
      out.write("				 \r\n");
      out.write("				 //2. var, let, const\r\n");
      out.write("				 // 런타임보다 먼저 실행 - 호이스팅( var, function, class,,,, )\r\n");
      out.write("				 // var - 전역변수\r\n");
      out.write("				 // let - 지역변수 ( 변수중복 선언불가)\r\n");
      out.write("				 // const - 상수\r\n");
      out.write("				 document.write(\"<br/>정리2. var, let, const\");\r\n");
      out.write("				 \r\n");
      out.write("				 //3. 자료형\r\n");
      out.write("				 document.write(\"<br/>정리3. 자료형\");\r\n");
      out.write("				 let d1; console.log(d1);  // undefined\r\n");
      out.write("				 d1=10;  d1=3.14;  d1=\"abc\"; d1=true; d1=[\"sally\",3,7,8];  d1={};\r\n");
      out.write("				 d1=function(){};\r\n");
      out.write("				 \r\n");
      out.write("				 test3=10;\r\n");
      out.write("				 console.log( test3 + \"10\" ); //1010 - 원하는 결과물 : 20\r\n");
      out.write("				 console.log( typeof(test3) + typeof(\"10\") ); // number - string\r\n");
      out.write("				 console.log( test3 + Number(\"10\") ); // number - number  20\r\n");
      out.write("				                      // Number 문자열을 숫자로\r\n");
      out.write("				 \r\n");
      out.write("				 //4. 알림창\r\n");
      out.write("				 document.write(\"<br/>정리4. 알림창\");\r\n");
      out.write("			</script>\r\n");
      out.write("			<button class=\"btn btn-outline-primary\" onclick=\"alert('홀길동')\">alert</button>\r\n");
      out.write("			<button class=\"btn btn-outline-primary\" onclick=\"prompt('물어보고싶은말')\">prompt</button>\r\n");
      out.write("			<button class=\"btn btn-outline-primary\" onclick=\"confirm('취소?')\">confirm</button>\r\n");
      out.write("			\r\n");
      out.write("			<h4>EX1</h4>\r\n");
      out.write("			<button class=\"btn btn-success\" onclick=\"yourname()\">YOURNAME</button>\r\n");
      out.write("			<script>\r\n");
      out.write("			function yourname(){\r\n");
      out.write("				let name = prompt('당신의 이름은?'); //1. 사용자에게 이름입력받아\r\n");
      out.write("				alert('반갑습니다~' + name + '님!'); //2. 반갑습니다~ 고객님!\r\n");
      out.write("			}\r\n");
      out.write("			</script>	\r\n");
      out.write("			\r\n");
      out.write("			<h4>EX2</h4>\r\n");
      out.write("			<button class=\"btn btn-success\" onclick=\"plus()\">PLUS</button>\r\n");
      out.write("			<script>\r\n");
      out.write("			function plus(){\r\n");
      out.write("				let num1 = prompt('숫자입력1'); // string\r\n");
      out.write("				let num2 = prompt('숫자입력2'); // string\r\n");
      out.write("				let result = Number(num1)+Number(num2)\r\n");
      out.write("				alert(num1 + \"+\" + num2 + \"=\" + result);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			</script>		\r\n");
      out.write("			<h4>Step1. IF</h4>\r\n");
      out.write("			<script>\r\n");
      out.write("				let if1 = 2;\r\n");
      out.write("				if(if1==2){console.log(\"2이다\");}\r\n");
      out.write("				else{ console.log(\"2가 아니다\"); }\r\n");
      out.write("				\r\n");
      out.write("			</script>\r\n");
      out.write("				\r\n");
      out.write("		</div>\r\n");
      out.write("		<!--     -->\r\n");
      out.write("		<!--     -->\r\n");
      out.write("		<hr />\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<h4>EX</h4>\r\n");
      out.write("			<pre>\r\n");
      out.write("      평균을 입력하세요 __입력받기\r\n");
      out.write("      만약 평균이 60점 이상(60점포함)이라면 합격, 아니면 불합격 출력\r\n");
      out.write("    </pre>\r\n");
      out.write("			<input type=\"button\" value=\"ex1\" id=\"ex1\" title=\"버튼을 클릭하세요\"\r\n");
      out.write("				class=\"btn btn-success\" onclick=\"ex1()\" />\r\n");
      out.write("			<script>\r\n");
      out.write("				// 작업위치\r\n");
      out.write("				function ex1() {\r\n");
      out.write("					let avg = prompt('평균을 입력하세요');\r\n");
      out.write("					if(avg >= 60) {alert('합격');}\r\n");
      out.write("					else{alert('불합격');}\r\n");
      out.write("				}\r\n");
      out.write("			</script>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<div class=\"container card  my-3\">\r\n");
      out.write("		<h3 class=\"card-header\">007. CONTROL - Step2. SWITCH</h3>\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<h4>Step2. SWITCH</h4>\r\n");
      out.write("			<script>\r\n");
      out.write("				/*\r\n");
      out.write("				swtich(  처리하고 싶은 대상    ){\r\n");
      out.write("				    case 대상의상태:    처리;  break;\r\n");
      out.write("				    case 대상의상태:    처리;  break;\r\n");
      out.write("				    case 대상의상태:    처리;  break;\r\n");
      out.write("				    default : 기본처리\r\n");
      out.write("				} */\r\n");
      out.write("\r\n");
      out.write("				// 작업위치\r\n");
      out.write("				let sw = 2;\r\n");
      out.write("				switch(sw){\r\n");
      out.write("				 case 1 : console.log('1이다'); break;\r\n");
      out.write("				 case 2 : console.log('2이다'); break;\r\n");
      out.write("				 case 3 : console.log('3이다'); break;\r\n");
      out.write("				 default : console.log('1,2,3이 아니다');\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			</script>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!--     -->\r\n");
      out.write("		<!--     -->\r\n");
      out.write("		<hr />\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<h4>EX</h4>\r\n");
      out.write("			<pre>\r\n");
      out.write("      4,5,6 중에 입력하세요\r\n");
      out.write("      4번 월드콘  ,  5번 구구콘 , 6번 설레임 알림창을 띄우시오.\r\n");
      out.write("    </pre>\r\n");
      out.write("			<input type=\"button\" value=\"switch1\" id=\"switch1\" title=\"버튼을 클릭하세요\"\r\n");
      out.write("				class=\"btn btn-success\" onclick=\"switch1()\" />\r\n");
      out.write("			<script>\r\n");
      out.write("				// 작업위치\r\n");
      out.write("				//1. switch \r\n");
      out.write("				function switch1() {\r\n");
      out.write("					let ice = prompt('4,5,6중에 입력하세요');\r\n");
      out.write("					switch (ice) {\r\n");
      out.write("					case '4': alert('월드콘'); break;\r\n");
      out.write("					case '5': alert('구구콘'); break;\r\n");
      out.write("					case '6': alert('설레임'); break;\r\n");
      out.write("					default : ('4,5,6중에 입력하세요');\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				//2.  switch1\r\n");
      out.write("			</script>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<!--                                    -->\r\n");
      out.write("	<div class=\"container card  my-3\">\r\n");
      out.write("		<h3 class=\"card-header\">007. CONTROL - Step3. FOR/WHILE/DO WHILE</h3>\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<h4>Step3. FOR/WHILE/DO WHILE</h4>\r\n");
      out.write("			<script>\r\n");
      out.write("				/* STEP1 for  - 반복횟수 알때\r\n");
      out.write("				   for(  초기문; 조건문; 증감문 ){  }\r\n");
      out.write("				 */\r\n");
      out.write("\r\n");
      out.write("				//1. 영역 :  복붙-복사하는 한줄 { 반복되는 영역 }    -  {  console.log(1); }\r\n");
      out.write("				//2. 변수 : {반복 영역 - 변수}                      -  {  console.log(i); }    \r\n");
      out.write("				//3. 패턴 : for(시작; 종료; 변화) \r\n");
      out.write("				// 작업위치\r\n");
      out.write("			</script>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!--     -->\r\n");
      out.write("		<!--     -->\r\n");
      out.write("		<hr />\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<h4>EX</h4>\r\n");
      out.write("			<pre>\r\n");
      out.write("    for \r\n");
      out.write("    Q1)		1	2	3	4	5\r\n");
      out.write("    Q2)		5	4	3	2	1\r\n");
      out.write("    Q3)		2	4	6 \r\n");
      out.write("    Q4)		hello1		hello2		hello3\r\n");
      out.write("    </pre>\r\n");
      out.write("			<script>\r\n");
      out.write("				// for, while, do while\r\n");
      out.write("				//A1)		1	2	3	4	5\r\n");
      out.write("				for(let i=1;i<=5;i++){\r\n");
      out.write("					document.write(i +\"\\t\");\r\n");
      out.write("				}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				let i=1; while(i<=5) {document.write(i+\"\\t\"); i++;}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				i=1; do{document.write(i+\"\\t\"); i++;} while(i<=5);\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				//A2) 5 4 3 2 1\r\n");
      out.write("				for(let i=5;i>=1;i--) {\r\n");
      out.write("					document.write(i+\"\\t\");\r\n");
      out.write("				}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				let i1=5; while(i1>=1) {document.write(i1+\"\\t\"); i1--;}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				i1=5; do{document.write(i1+\"\\t\"); i1--;} while(i1>=1);\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				//A3) 2 4 6\r\n");
      out.write("				for(let i2=1;i2<=6;i2++) {\r\n");
      out.write("					if(i2%2==0){document.write(i2+\"\\t\");}\r\n");
      out.write("				}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				let i2=1; while(i2<=6) {if(i2%2==0){document.write(i2+\"\\t\");} i2++;}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				i2=1; do {if(i2%2==0){document.write(i2+\"\\t\");} i2++;} while(i2<=6);\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				//A4) hello1  hello2 hello3\r\n");
      out.write("				for(let i3=1;i3<=3;i3++) {\r\n");
      out.write("					document.write(\"hello \"+i3+\"\\t\");\r\n");
      out.write("				}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				let i3=1; while(i3<=3) {document.write(\"hello \"+i3+\"\\t\"); i3++;}\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				i3=1; do {document.write(\"hello \"+i3+\"\\t\"); i3++;} while(i3<=3);\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				\r\n");
      out.write("				//A5)  const list1=[1,2,3,4,5];\r\n");
      out.write("				// 향상된 for , forEach\r\n");
      out.write("				const list1=[1,2,3,4,5];\r\n");
      out.write("				for(let li in list1) {document.write(li + \"-\" +list1[li] + \"<br/>\");}\r\n");
      out.write("				for(let li of list1) {document.write(li  + \"<br/>\");}\r\n");
      out.write("\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				list1.forEach( (value, index, list1 )=>{\r\n");
      out.write("					document.write( value + \"/\" + index + \"/\" + list1 + \"<br/>\" );\r\n");
      out.write("				});\r\n");
      out.write("				document.write(\"<br/>\")\r\n");
      out.write("				\r\n");
      out.write("				//Q1. const list2 = ['a','b','c','d']\r\n");
      out.write("				const list2 = ['a','b','c','d']\r\n");
      out.write("				// 향상된 for\r\n");
      out.write("				for(let i in list2) {document.write(i + \"-\" +list2[i] + \"<br/>\");}\r\n");
      out.write("				for(let i of list2) {document.write(i+ \"<br/>\");}\r\n");
      out.write("				// forEach 연습\r\n");
      out.write("				list2.forEach((value,index,list2)=>{\r\n");
      out.write("					document.write(value + \"/\" + index + \"/\" + list2 + \"<br/>\");\r\n");
      out.write("				});\r\n");
      out.write("			</script>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
